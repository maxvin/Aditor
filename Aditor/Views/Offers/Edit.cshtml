@model Aditor.Models.ViewModels.OfferViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Offers", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Offers</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.offerID)

        <div class="form-group">
            @Html.LabelFor(model => model.advertiserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.advertiserId, Model.AdvertisersList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.advertiserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.categoryId, Model.CategoriesList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.revenuetypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.revenuetypeId, Model.RevenueTypesList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.revenuetypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.revenuevalue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.revenuevalue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.revenuevalue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.payouttypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.payouttypeId, Model.PayoutTypesList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.payouttypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.payoutvalue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.payoutvalue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.payoutvalue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.active)
                    @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.staticvalues, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.staticvalues, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.staticvalues, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.offername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.offername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.offername, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@if (Model.Banner != null)
        {
            <div class="form-group">
                @Html.Label("Banner", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="~/Banners?id=@Model.Banner.FileId" alt="Banner" style="width: 200px;" />
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Banner, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Banner" name="uploadBanner" />
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
